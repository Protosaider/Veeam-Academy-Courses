<local:BasePage x:TypeArguments="viewModels:ChatViewModel"
                x:Class="ClientApp.Pages.ChatPage"
                x:Name="Page"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:ClientApp.Pages"
      xmlns:viewModels="clr-namespace:ClientApp.ViewModels.ChatPage"
      xmlns:controlsChatMessage="clr-namespace:ClientApp.Controls.ChatMessage"
      xmlns:attachedProperties="clr-namespace:ClientApp.AttachedProperties"
      xmlns:design="clr-namespace:ClientApp.ViewModels.ChatPage.Design"
      xmlns:converters="clr-namespace:ClientApp.Converters"
      xmlns:chat="clr-namespace:ClientApp.Controls.Chat"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      >
    <!-- xmlns:system="clr-namespace:System;assembly=mscorlib" -->
    <!--<local:BasePage x:TypeArguments="viewModels:ChatViewModel, system:Guid"-->

    <Grid>
        <Grid.RowDefinitions>
            <!-- Title bar -->
            <RowDefinition Height="Auto" />
            <!-- chat list -->
            <RowDefinition Height="*" />
            <!-- Message text -->
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!-- Title bar -->
        <Grid Height="50" Background="{StaticResource DarkBlueBrush}">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />

            </Grid.ColumnDefinitions>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center"
                           Grid.ColumnSpan="2" Visibility="{Binding HasTitle, Converter={converters:BooleanToVisibilityValueConverter}}"
                        >
                <!-- Title text -->
                <TextBlock Text="{Binding DisplayTitle}" 
                           Foreground="{StaticResource ForegroundLightBrush}"
                           FontSize="{StaticResource FontSizeExtraLarge}"
                           FontFamily="{StaticResource ExoRegular}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                />
                <chat:ChatIconControl Padding="5 0 0 0"
                                      HorizontalContentAlignment="Center" 
                                      HorizontalAlignment="Center"
                                      VerticalContentAlignment="Center"
                                      VerticalAlignment="Center"
                                      Foreground="{StaticResource ForegroundLightBrush}"/>
            </StackPanel>
           
            <!-- Main buttons -->
            <StackPanel Orientation="Horizontal" Grid.Column="1">
                <Button Style="{StaticResource IconButton}" 
                        Content="{StaticResource FontAwesomeSearchIcon}" 
                        Command="{Binding OpenSearchCommand}"
                        />
                <Button Style="{StaticResource IconButton}" 
                        Content="{StaticResource FontAwesomeEllipsisVerticalIcon}" 
                        Command="{Binding OpenParticipantsCommand}"
                        />
            </StackPanel>

            <!-- Search Overlay -->
            <Grid Grid.ColumnSpan="2"
                  attachedProperties:AnimateSlideInFromRightMarginProperty.Value="{Binding SearchIsOpen}"
                  >

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <!-- Close search button -->
                <Button Style="{StaticResource IconGrowButton}" 
                        Content="{StaticResource FontAwesomeCloseIcon}"
                        Command="{Binding CloseSearchCommand}"
                        Foreground="{StaticResource OrangeBrush}"
                        />

                <!-- Search box -->
                <TextBox 
                    Grid.Column="1" 
                    Tag="Search text..."
                    attachedProperties:FocusProperty.Value="{Binding SearchIsOpen}"
                    Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}"
                    Margin="0 5 5 5"
                    FontSize="{StaticResource FontSizeRegular}"
                    >
                    <TextBox.InputBindings>
                        <!-- Clear text on Esc -->
                        <KeyBinding Command="{Binding ClearSearchCommand}" Key="Escape" />
                        <!-- Search on enter -->
                        <KeyBinding Command="{Binding SearchCommand}" Key="Return" />
                    </TextBox.InputBindings>
                </TextBox>
            </Grid>

        </Grid>

        <StackPanel Grid.Row="1"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    attachedProperties:AnimateSlideInFromTopProperty.Value="{Binding ParticipantsIsOpen}"
                    ZIndex="1"
                    Orientation="Vertical"
                    >
            <chat:ChatParticipantListControl MaxWidth="200"
                                             MaxHeight="100"
                                             DataContext="{Binding }"
            />
            <!--<Button Style="{StaticResource IconGrowButton}" 
                    Content="{StaticResource FontAwesomeCloseIcon}"
                    Command="{Binding CloseParticipantsCommand}"
                    Foreground="{StaticResource OrangeBrush}"
            />
            <Button Content="TEST"
                    Command="{Binding CloseParticipantsCommand}"
            />-->
        </StackPanel>


        <!-- chat list-->
        <controlsChatMessage:ChatMessageListControl 
            x:Name="ChatMessageList"
            Grid.Row="1"  
            DataContext="{Binding}"/>

        <!-- Message Send Text box -->
        <Grid Grid.Row="2" 
              Panel.ZIndex="3"
              MinHeight="50"
              MaxHeight="114"
              Background="{StaticResource ForegroundLightBrush}"
              >

            <Grid.ColumnDefinitions>
                <!-- Attach button -->
                <ColumnDefinition Width="Auto" />
                <!-- Text entry box -->
                <ColumnDefinition Width="*" />
                <!-- Additional buttons -->
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <!-- Attach button -->
            <!--<Button Style="{StaticResource IconGrowButton}"
                    Height="{Binding MinHeight, RelativeSource={RelativeSource AncestorType=Grid}}"
                    Content="{StaticResource FontAwesomePaperclipIcon}"
                    VerticalAlignment="Top"
                    Foreground="{StaticResource ForegroundDarkBrush}"
                    Command="{Binding AttachmentButtonCommand}"
                    />-->

            <!-- Message box -->
            <TextBox x:Name="MessageText"
                     Grid.Column="1" 
                     Tag="Write a message..."
                     attachedProperties:IsFocusedProperty.Value="True"
                     Text="{Binding PendingMessageText, UpdateSourceTrigger=PropertyChanged,
                     ValidatesOnNotifyDataErrors=True, Mode=TwoWay}"
                     FontSize="{StaticResource FontSizeRegular}"
                     VerticalAlignment="Center"
                     BorderThickness="0"
                     Padding="10 10 10 10"
                     AcceptsReturn="True"
                     AcceptsTab="True"
                     VerticalScrollBarVisibility="Auto"
                     PreviewKeyDown="MessageText_PreviewKeyDown"
                     >
                <TextBox.InputBindings>
                    <KeyBinding Command="{Binding SendCommand}" Key="Return">
                        <KeyBinding.CommandParameter>
                            <MultiBinding Converter="{converters:SendMessageCommandParameterConverter}">
                                <MultiBinding.Bindings>
                                    <Binding Path="Id" />
                                    <Binding Path="PendingMessageText"/>
                                    <Binding Path="IsPersonal" />
                                    <Binding Path="PendingContent" />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </KeyBinding.CommandParameter>
                    </KeyBinding>
                </TextBox.InputBindings>
            </TextBox>

            <!-- Additional buttons -->
            <StackPanel Grid.Column="2"
                        Orientation="Horizontal"
                        VerticalAlignment="Top"
                        Margin="0 0 8 0"
                        >

                <!-- Emoji button -->
                <!--<Button Style="{StaticResource IconGrowButton}"
                    Height="{Binding MinHeight, RelativeSource={RelativeSource AncestorType=Grid}}"
                    Content="{StaticResource FontAwesomeEmojiIcon}"
                    Foreground="{StaticResource OrangeBrush}"
                    />-->

                <!-- Refresh button -->
                <!--<Button Content="Refresh"
                            Padding="8"
                            Margin="10"
                            Background="{StaticResource GreenBrush}"
                            FontSize="{StaticResource FontSizeRegular}"
                            Command="{Binding RefreshMessageListCommand}"
                            />-->

                <!-- Send button -->
                <Button Content="Send"
                        Padding="8"
                        IsDefault="True"
                        Focusable="False"
                        attachedProperties:IsBusyProperty.Value="{Binding SendCommand.IsExecuting}"
                        Command="{Binding SendCommand}"
                        Background="{StaticResource GreenBrush}"
                        FontSize="{StaticResource FontSizeRegular}"
                        >
                    <Button.CommandParameter>
                        <MultiBinding Converter="{converters:SendMessageCommandParameterConverter}">
                            <MultiBinding.Bindings>
                                <Binding Path="Id" />
                                <Binding Path="PendingMessageText"/>
                                <Binding Path="IsPersonal" />
                                <Binding Path="PendingContent" />
                            </MultiBinding.Bindings>
                        </MultiBinding>
                    </Button.CommandParameter>
                </Button>
            </StackPanel>

        </Grid>
    </Grid>
</local:BasePage>